                                            //BRUTE FORCE APPROACH
                                            
void rotate(vector<vector<int>>& matrix) {
        int n= matrix.size();
        int m= matrix[0].size();
        vector<vector<int>>newmatrix(n, vector < int > (n, 0));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                newmatrix[j][n-i-1]=matrix[i][j];
            }
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                matrix[i][j]=newmatrix[i][j];
            }
        }
    }
    
    
    
                                            //OPTIMAL SOLUTION
                                            
                                            
  void rotate(vector<vector<int>>& matrix) {
        int n= matrix.size();
        int m= matrix[0].size();
       
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){
                swap(matrix[j][i],matrix[i][j]);
            }
        }
        
        for(int i=0;i<n;i++){
            {
                reverse(matrix[i].begin(), matrix[i].end());
            }
        }
    }
