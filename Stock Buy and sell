 
                                     // O(n^2) complexity
 
 
 int n = prices.size();
    
      int max=0;

           for( int i=0;i<n;i++){
               for(int j=i;j<n;j++){
                   if(prices[j]-prices[i]>max)
                       max= prices[j]-prices[i];
               }
           }
        return max;
        
        
                                     // OPTIMAL SOLUTION O(n^2)
                                     
    
     int n = prices.size();
    
      int maxProfit=0;
       int minimal= INT_MAX;

           for( int i=0;i<n;i++){
               minimal= min(minimal, prices[i]);
               maxProfit= max(maxProfit,prices[i]-minimal);
               
           }
        return maxProfit;
